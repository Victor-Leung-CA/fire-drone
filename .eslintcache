[{"/Users/victor/Desktop/fire-drone/src/index.js":"1","/Users/victor/Desktop/fire-drone/src/App.js":"2","/Users/victor/Desktop/fire-drone/src/reportWebVitals.js":"3","/Users/victor/Desktop/fire-drone/src/components/sse-test.js":"4","/Users/victor/Desktop/fire-drone/src/components/Sidebar.js":"5","/Users/victor/Desktop/fire-drone/src/components/NewIFR.js":"6","/Users/victor/Desktop/fire-drone/src/pages/Gallery.js":"7","/Users/victor/Desktop/fire-drone/src/components/IFR-form.js":"8","/Users/victor/Desktop/fire-drone/src/pages/AlertHistory.js":"9","/Users/victor/Desktop/fire-drone/src/pages/Map.js":"10","/Users/victor/Desktop/fire-drone/src/pages/Dashboard.js":"11","/Users/victor/Desktop/fire-drone/src/components/Chart.js":"12","/Users/victor/Desktop/fire-drone/src/API/sensorData.js":"13","/Users/victor/Desktop/fire-drone/src/components/ErrorBoundary.js":"14","/Users/victor/Desktop/fire-drone/src/pages/LocationMarker.js":"15","/Users/victor/Desktop/fire-drone/src/components/LocationMarker.js":"16"},{"size":504,"mtime":1615767485708,"results":"17","hashOfConfig":"18"},{"size":1177,"mtime":1616537958381,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1610957837581,"results":"20","hashOfConfig":"18"},{"size":1593,"mtime":1615771834115,"results":"21","hashOfConfig":"18"},{"size":2175,"mtime":1615932961961,"results":"22","hashOfConfig":"18"},{"size":1453,"mtime":1615931009203,"results":"23","hashOfConfig":"18"},{"size":891,"mtime":1615931798143,"results":"24","hashOfConfig":"18"},{"size":8599,"mtime":1616300505127,"results":"25","hashOfConfig":"18"},{"size":3051,"mtime":1615932908187,"results":"26","hashOfConfig":"18"},{"size":816,"mtime":1616537787820,"results":"27","hashOfConfig":"18"},{"size":4501,"mtime":1617179592531,"results":"28","hashOfConfig":"18"},{"size":800,"mtime":1615925403661,"results":"29","hashOfConfig":"18"},{"size":3778,"mtime":1617175904370,"results":"30","hashOfConfig":"18"},{"size":869,"mtime":1616278118467,"results":"31","hashOfConfig":"18"},{"size":354,"mtime":1615930002579,"results":"32","hashOfConfig":"18"},{"size":342,"mtime":1615930679673,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"6rmqb1",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"/Users/victor/Desktop/fire-drone/src/index.js",[],["73","74"],"/Users/victor/Desktop/fire-drone/src/App.js",[],"/Users/victor/Desktop/fire-drone/src/reportWebVitals.js",[],"/Users/victor/Desktop/fire-drone/src/components/sse-test.js",[],"/Users/victor/Desktop/fire-drone/src/components/Sidebar.js",["75","76","77","78","79","80","81"],"import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {NavLink} from \"react-router-dom\";\nimport '../css/Sidebar.css';\n\n//Images\nimport fireDroneLogo from '../images/FireDrone Logo.svg';\nimport dashboardImg from '../images/dashboard.svg';\nimport mapImg from '../images/map.svg';\nimport alertImg from '../images/journal-album.svg';\nimport galleryImg from '../images/images.svg'\nimport penImg from '../images/pen.svg'\n\nclass Sidebar extends React.Component {\n  render(){\n    return(\n        <nav className=\"sidebar\">\n            <img className = \"sidebarLogo\" src={fireDroneLogo} />\n                <NavLink \n                    className=\"navbarLink\" \n                    activeClassName=\"active\" \n                    exact to ='/'>\n                    <img className=\"sidebarIcon\" src={dashboardImg}/> Dashboard\n                </NavLink>\n                <NavLink \n                    className=\"navbarLink\" \n                    activeClassName=\"active\" \n                    to='/map'>\n                    <img className=\"sidebarIcon\" src={mapImg}/>Map\n                </NavLink>\n                <NavLink \n                    className=\"navbarLink\" \n                    activeClassName=\"active\" \n                    to='/alert-history'>\n                    <img className=\"sidebarIcon\" src={alertImg}/>Alert History\n                </NavLink>\n                <NavLink \n                    className=\"navbarLink\" \n                    activeClassName=\"active\" \n                    to='/new-ifr'>\n                    <img className=\"sidebarIcon\" src={penImg}/>New IFR\n                </NavLink>\n                <NavLink \n                    className=\"navbarLink\" \n                    activeClassName=\"active\" \n                    to='/gallery'>\n                    <img className=\"sidebarIcon\" src={galleryImg}/>Gallery\n                </NavLink>\n                <NavLink \n                    className=\"navbarLink\" \n                    activeClassName=\"active\" \n                    to='/sse-test'>\n                    <img className=\"sidebarIcon\" src={alertImg}/>SSE Test\n                </NavLink>\n        </nav>\n    );\n  }\n}\nexport default Sidebar;","/Users/victor/Desktop/fire-drone/src/components/NewIFR.js",["82"],"import React, { useState, useEffect } from 'react';\nimport Select from \"react-select\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../css/NewIFR.css\"\nimport pencilImg from '../images/pencil-square.svg';\nconst getNum = require(\"../API/sensorData\").getNumSensorData;\n\nvar options = [];\n\nconst NewIFR = (props) => {\n    const [value, setValue] = useState(0);\n\n    useEffect(()=>{\n        getNum().then(number => {\n            if(options.length < number){\n                for (var i=0; i < number; i++){\n                    options.push({value: i, label: i});\n                }\n            }\n        });\n    }, [])\n\n    const handleChange = (e) => {\n        setValue(e.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        window.location.href = 'http://localhost:3000/edit-ifr/' + value;\n    }\n\n    return (\n        <form className=\"container-fluid newIFRContainer\" onSubmit={handleSubmit}>\n            <div className= \"container-fluid newIFRSubcontainer\">\n                <h2>Edit IFR form</h2> <br/>\n                <p>Please select the incident number to fill in the IFR form.</p>\n                <Select className= \"newIFRSelect\" options={options} onChange={handleChange}/>\n                <br />\n                <button className= \"btn newIFRbtn\" type=\"submit\" value=\"Submit\"><img src={pencilImg} className=\"pencilImg\"/>Edit IFR Form</button>\n            </div>\n        </form>\n    );\n}\n\nexport default NewIFR;","/Users/victor/Desktop/fire-drone/src/pages/Gallery.js",[],"/Users/victor/Desktop/fire-drone/src/components/IFR-form.js",["83","84"],"import React, { useState, useEffect } from 'react';\nimport Select from \"react-select\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../css/IFR-form.css\";\nimport errorImg from '../images/server-error.svg'\nconst getOneSensorData = require(\"../API/sensorData\").getOneSensorData;\n\nconst IFRForm = (props) => {\n    const [error, setError] = useState(null);\n    \n    const [sensorDataInfo, setSensorDataInfo] = useState({\n        incidentNum: 0,\n        coordinates: [{\n            longitude: 0,\n            latitude: 0,\n            time: 0\n        }]\n    })\n    \n    const [formInfo, setFormInfo] = useState({\n        // Step 1\n        incidentNum: sensorDataInfo.incidentNum,\n        reportedBy: '',\n        elevation: 0,\n\n        // Step 2\n        radius: 0,\n        fireRank: 0,\n        fuels: 0,\n\n        // Step 3\n        valAtRisk: 0,\n        wind: 0,\n        adjFuels: 0,\n        slope: 0,\n        aspect: 0,\n        slopePos: 0,\n        access: 0,\n        availWater: 0,\n\n        // Step 4\n        suspectedCause: '',\n        action: '',\n        probSuccess: 0,\n        estCost: 0\n    });\n\n\n    const handleInputChange = (e) => {\n        const value = e.target.value;\n        const name = e.target.name;\n        setFormInfo(formInfo => ({...formInfo, [name]: value}))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(formInfo);\n    }\n\n    useEffect(() => {\n        getOneSensorData(props.match.params.incidentNum)\n            .then(data => {\n                setSensorDataInfo(data);\n                setFormInfo(formInfo => ({...formInfo, incidentNum: data.incidentNum}))\n            })\n            .catch(error => {\n                setError({error: 1, code: error.message});\n            })\n    }, []);\n\n    if(error){\n        return(\n            <div className=\"container-fluid IFR-form-body-error\">\n                <img className=\"ErrorImage\" src={errorImg} />\n                <h2>Oops! There is an error with the server.</h2> <br />\n                <h5>Error Code {error.code} </h5>\n            </div>\n        )\n    }\n    else{\n        return (\n            <div className=\"container-fluid IFR-form-body\">\n                <div className = \"formHeader\">\n                    <h2>Edit IFR form</h2>\n                    <h5>Incident Numer {props.match.params.incidentNum}</h5>\n                </div>\n\n                {/* Step 1: General Information */}\n                <div className=\"IFRFormBlock\">\n                    <h5 className=\"formBlockTitle\">Step 1: General Information</h5>\n                    <br className=\"formBlockBorder\"/>\n                    <div className=\"row\">\n                        <div className=\"col-md-6 formBlockCol\">\n                            <p>Incident Number</p>\n                            <Select className=\"formSubmissionSelect\" \n                            options={[{value: sensorDataInfo.incidentNum, label: sensorDataInfo.incidentNum}]}/>\n                            <p>Date & Time</p>\n                            <Select className=\"formSubmissionSelect\"\n                            options= {[{value: sensorDataInfo.coordinates[0].time, label: sensorDataInfo.coordinates[0].time}]}/>\n                            <p>Elevation (m)</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} type=\"number\" min=\"0\" name=\"elevation\"></input>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <p>Reported By</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} name=\"reportedBy\"></input>\n                            <p>Longitude</p>\n                            <Select className=\"formSubmissionSelect\"\n                            options={ [{value: sensorDataInfo.coordinates[0].longitude, label: sensorDataInfo.coordinates[0].longitude}] }/>\n                            <p>Latitude</p>\n                            <Select className=\"formSubmissionSelect\"\n                            options={ [{value: sensorDataInfo.coordinates[0].latitude, label: sensorDataInfo.coordinates[0].latitude}] }/>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Step 2: Fire Information */}\n                <div className=\"IFRFormBlock\">\n                    <h5 className=\"formBlockTitle\">Step 2: Fire Information</h5>\n                    <br className=\"formBlockBorder\"/>\n                    <div className=\"row\">\n                        <div className=\"col-md-6 formBlockCol\">\n                            <p>Alpha Size</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} type=\"number\" min=\"0\" name=\"alpha\"></input>\n                            <p>Fuels</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} type=\"number\" min=\"0\" name=\"fuels\"></input>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <p>Fire Rank</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} type=\"number\" min=\"0\" name=\"fireRank\"></input>\n                            <p>Radius (m)</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} type=\"number\" min=\"0\" name=\"radius\"></input>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Step 3: Environmental Factors */}\n                <div className=\"IFRFormBlock\">\n                    <h5 className=\"formBlockTitle\">Step 3: Environment Factors</h5>\n                    <br className=\"formBlockBorder\"/>\n                    <div className=\"row\">\n                        <div className=\"col-md-6 formBlockCol\">\n                            <p>Values at Risk</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} name=\"valAtRisk\"></input>\n                            <p>Adjacent Fuels</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} name=\"adjFuels\"></input>\n                            <p>Aspect</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} name=\"aspect\"></input>\n                            <p>Access</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} name=\"access\"></input>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <p>Wind</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} type=\"number\" min=\"0\" name=\"wind\"></input>\n                            <p>Slope</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} type=\"number\" min=\"0\" name=\"slope\"></input>\n                            <p>Slope Position</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} name=\"slopePos\"></input>\n                            <p>Available Water</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} type=\"number\" min=\"0\" name=\"availWater\"></input>\n                        </div>\n                    </div>\n                </div>\n\n\n                {/* Step 4: Cause and Action */}\n                <div className=\"IFRFormBlock\">\n                    <h5 className=\"formBlockTitle\">Step 4: Cause and Action</h5>\n                    <br className=\"formBlockBorder\"/>\n                    <div className=\"row\">\n                        <div className=\"col-md-6 formBlockCol\">\n                            <p>Probability of Success (%)</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} type=\"number\" min=\"0\" name=\"probSuccess\"></input>\n                            <p>Action Recommended</p>\n                            <textarea className=\"IFRInput\" onChange={handleInputChange} name=\"action\" contenteditable=\"true\"></textarea>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <p>Estimated Cost of Control</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} type=\"number\" min=\"0\" name=\"estCost\"></input>\n                            <p>Suspected Cause</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} name=\"suspectedCause\"></input>\n                        </div>\n                    </div>\n                </div>\n\n                <button className=\"btn IFRFormBtn\" onClick={handleSubmit}>Submit</button>\n            </div>\n\n        );\n    }\n}\n\nexport default IFRForm;","/Users/victor/Desktop/fire-drone/src/pages/AlertHistory.js",[],"/Users/victor/Desktop/fire-drone/src/pages/Map.js",["85"],"import React, { Component } from 'react';\nimport '../css/Map.css';\nimport GoogleMapReact from 'google-map-react'\nimport LocationMarker from '../components/LocationMarker.js'\n\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\n\nclass Map extends Component {\n  static defaultProps = {\n    center: {\n      lat: 59.95,\n      lng: 30.33\n    },\n    zoom: 11\n  };\n\n  render() {\n    return (\n      <div className=\"mapContainer\">\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: 'AIzaSyAChc-w8pscsRgaW5t1S2jyHLNzRVpOO9c' }}\n          defaultCenter={this.props.center}\n          defaultZoom={this.props.zoom}\n        >\n          <LocationMarker\n            lat={49.2827}\n            lng={123.1207}\n            \n          />\n          \n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","/Users/victor/Desktop/fire-drone/src/pages/Dashboard.js",["86"],"/Users/victor/Desktop/fire-drone/src/components/Chart.js",[],"/Users/victor/Desktop/fire-drone/src/API/sensorData.js",[],"/Users/victor/Desktop/fire-drone/src/components/ErrorBoundary.js",["87"],"import React, { Component } from 'react';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error) {\n      // Update state so the next render will show the fallback UI.\n      return { hasError: true };\n    }\n  \n    // componentDidCatch(error, errorInfo) {\n    //   // You can also log the error to an error reporting service\n    //   getDerivedStateFromError(error);\n    // //   logErrorToMyService(error, errorInfo);\n    // }\n  \n    render() {\n        if (this.state.errorInfo) {\n          // Error path\n          return (\n            <div>\n              <h2>Something went wrong.</h2>\n              <details style={{ whiteSpace: 'pre-wrap' }}>\n                {this.state.error && this.state.error.toString()}\n                <br />\n                {this.state.errorInfo.componentStack}\n              </details>\n            </div>\n          );\n        }\n        // Normally, just render children\n        return this.props.children;\n      }  \n}\n\nexport default ErrorBoundary;",["88","89"],"/Users/victor/Desktop/fire-drone/src/pages/LocationMarker.js",[],"/Users/victor/Desktop/fire-drone/src/components/LocationMarker.js",[],{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":18,"column":13,"nodeType":"96","endLine":18,"endColumn":66},{"ruleId":"94","severity":1,"message":"95","line":23,"column":21,"nodeType":"96","endLine":23,"endColumn":70},{"ruleId":"94","severity":1,"message":"95","line":29,"column":21,"nodeType":"96","endLine":29,"endColumn":64},{"ruleId":"94","severity":1,"message":"95","line":35,"column":21,"nodeType":"96","endLine":35,"endColumn":66},{"ruleId":"94","severity":1,"message":"95","line":41,"column":21,"nodeType":"96","endLine":41,"endColumn":64},{"ruleId":"94","severity":1,"message":"95","line":47,"column":21,"nodeType":"96","endLine":47,"endColumn":68},{"ruleId":"94","severity":1,"message":"95","line":53,"column":21,"nodeType":"96","endLine":53,"endColumn":66},{"ruleId":"94","severity":1,"message":"95","line":39,"column":81,"nodeType":"96","endLine":39,"endColumn":125},{"ruleId":"97","severity":1,"message":"98","line":69,"column":8,"nodeType":"99","endLine":69,"endColumn":10,"suggestions":"100"},{"ruleId":"94","severity":1,"message":"95","line":74,"column":17,"nodeType":"96","endLine":74,"endColumn":62},{"ruleId":"101","severity":1,"message":"102","line":6,"column":7,"nodeType":"103","messageId":"104","endLine":6,"endColumn":24},{"ruleId":"101","severity":1,"message":"105","line":7,"column":7,"nodeType":"103","messageId":"104","endLine":7,"endColumn":17},{"ruleId":"101","severity":1,"message":"106","line":1,"column":17,"nodeType":"103","messageId":"104","endLine":1,"endColumn":26},{"ruleId":"90","replacedBy":"107"},{"ruleId":"92","replacedBy":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.match.params.incidentNum'. Either include it or remove the dependency array.","ArrayExpression",["111"],"no-unused-vars","'AnyReactComponent' is assigned a value but never used.","Identifier","unusedVar","'sensorData' is assigned a value but never used.","'Component' is defined but never used.",["109"],["110"],"no-global-assign","no-unsafe-negation",{"desc":"112","fix":"113"},"Update the dependencies array to be: [props.match.params.incidentNum]",{"range":"114","text":"115"},[1749,1751],"[props.match.params.incidentNum]"]