[{"/Users/victor/Desktop/fire-drone/src/index.js":"1","/Users/victor/Desktop/fire-drone/src/App.js":"2","/Users/victor/Desktop/fire-drone/src/reportWebVitals.js":"3","/Users/victor/Desktop/fire-drone/src/components/sse-test.js":"4","/Users/victor/Desktop/fire-drone/src/components/Sidebar.js":"5","/Users/victor/Desktop/fire-drone/src/components/NewIFR.js":"6","/Users/victor/Desktop/fire-drone/src/pages/Gallery.js":"7","/Users/victor/Desktop/fire-drone/src/components/IFR-form.js":"8","/Users/victor/Desktop/fire-drone/src/pages/AlertHistory.js":"9","/Users/victor/Desktop/fire-drone/src/pages/Map.js":"10","/Users/victor/Desktop/fire-drone/src/pages/Dashboard.js":"11","/Users/victor/Desktop/fire-drone/src/components/Chart.js":"12","/Users/victor/Desktop/fire-drone/src/API/sensorData.js":"13","/Users/victor/Desktop/fire-drone/src/components/ErrorBoundary.js":"14","/Users/victor/Desktop/fire-drone/src/pages/LocationMarker.js":"15","/Users/victor/Desktop/fire-drone/src/components/LocationMarker.js":"16","/Users/victor/Desktop/fire-drone/src/components/LocationInfoBox.js":"17","/Users/victor/Desktop/fire-drone/src/pages/Photos.js":"18","/Users/victor/Desktop/fire-drone/src/API/photos.js":"19","/Users/victor/Desktop/fire-drone/src/API/IFR.js":"20","/Users/victor/Desktop/fire-drone/src/components/LightningMap.js":"21","/Users/victor/Desktop/fire-drone/src/components/LightningMarker.js":"22"},{"size":504,"mtime":1615767485708,"results":"23","hashOfConfig":"24"},{"size":1178,"mtime":1618033727042,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":1610957837581,"results":"26","hashOfConfig":"24"},{"size":1593,"mtime":1615771834115,"results":"27","hashOfConfig":"24"},{"size":1985,"mtime":1618130198166,"results":"28","hashOfConfig":"24"},{"size":1453,"mtime":1615931009203,"results":"29","hashOfConfig":"24"},{"size":891,"mtime":1615931798143,"results":"30","hashOfConfig":"24"},{"size":8838,"mtime":1618038078515,"results":"31","hashOfConfig":"24"},{"size":2885,"mtime":1618128837941,"results":"32","hashOfConfig":"24"},{"size":2012,"mtime":1618036753536,"results":"33","hashOfConfig":"24"},{"size":4423,"mtime":1618131559167,"results":"34","hashOfConfig":"24"},{"size":1433,"mtime":1618131271107,"results":"35","hashOfConfig":"24"},{"size":3778,"mtime":1617175904370,"results":"36","hashOfConfig":"24"},{"size":869,"mtime":1616278118467,"results":"37","hashOfConfig":"24"},{"size":354,"mtime":1615930002579,"results":"38","hashOfConfig":"24"},{"size":342,"mtime":1615930679673,"results":"39","hashOfConfig":"24"},{"size":851,"mtime":1618034765416,"results":"40","hashOfConfig":"24"},{"size":3010,"mtime":1618037358409,"results":"41","hashOfConfig":"24"},{"size":536,"mtime":1618017770807,"results":"42","hashOfConfig":"24"},{"size":1924,"mtime":1618038580032,"results":"43","hashOfConfig":"24"},{"size":1935,"mtime":1618125534759,"results":"44","hashOfConfig":"24"},{"size":375,"mtime":1618125567481,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"6rmqb1",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"48"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"48"},"/Users/victor/Desktop/fire-drone/src/index.js",[],["102","103"],"/Users/victor/Desktop/fire-drone/src/App.js",[],"/Users/victor/Desktop/fire-drone/src/reportWebVitals.js",[],"/Users/victor/Desktop/fire-drone/src/components/sse-test.js",[],["104","105"],"/Users/victor/Desktop/fire-drone/src/components/Sidebar.js",["106","107"],"/Users/victor/Desktop/fire-drone/src/components/NewIFR.js",["108"],"import React, { useState, useEffect } from 'react';\nimport Select from \"react-select\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../css/NewIFR.css\"\nimport pencilImg from '../images/pencil-square.svg';\nconst getNum = require(\"../API/sensorData\").getNumSensorData;\n\nvar options = [];\n\nconst NewIFR = (props) => {\n    const [value, setValue] = useState(0);\n\n    useEffect(()=>{\n        getNum().then(number => {\n            if(options.length < number){\n                for (var i=0; i < number; i++){\n                    options.push({value: i, label: i});\n                }\n            }\n        });\n    }, [])\n\n    const handleChange = (e) => {\n        setValue(e.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        window.location.href = 'http://localhost:3000/edit-ifr/' + value;\n    }\n\n    return (\n        <form className=\"container-fluid newIFRContainer\" onSubmit={handleSubmit}>\n            <div className= \"container-fluid newIFRSubcontainer\">\n                <h2>Edit IFR form</h2> <br/>\n                <p>Please select the incident number to fill in the IFR form.</p>\n                <Select className= \"newIFRSelect\" options={options} onChange={handleChange}/>\n                <br />\n                <button className= \"btn newIFRbtn\" type=\"submit\" value=\"Submit\"><img src={pencilImg} className=\"pencilImg\"/>Edit IFR Form</button>\n            </div>\n        </form>\n    );\n}\n\nexport default NewIFR;","/Users/victor/Desktop/fire-drone/src/pages/Gallery.js",[],"/Users/victor/Desktop/fire-drone/src/components/IFR-form.js",["109","110"],"import React, { useState, useEffect } from 'react';\nimport Select from \"react-select\"\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../css/IFR-form.css\";\nimport errorImg from '../images/server-error.svg'\nconst getOneSensorData = require(\"../API/sensorData\").getOneSensorData;\nconst newIFR = require(\"../API/IFR\").newIFR;\n\nconst IFRForm = (props) => {\n    const [error, setError] = useState(null);\n    const [date, setDate] = useState('');\n\n    const [sensorDataInfo, setSensorDataInfo] = useState({\n        incidentNum: props.match.params.incidentNum,\n        coordinates: [{\n            longitude: 0,\n            latitude: 0,\n            time: 0\n        }]\n    })\n    \n    const [formInfo, setFormInfo] = useState({\n        // Step 1\n        incidentNum: props.match.params.incidentNum,\n        reportedBy: '',\n        elevation: 0,\n\n        // Step 2\n        radius: 0,\n        fireRank: 0,\n        fuels: 0,\n\n        // Step 3\n        valAtRisk: 0,\n        wind: 0,\n        adjFuels: 0,\n        slope: 0,\n        aspect: 0,\n        slopePos: 0,\n        access: 0,\n        availWater: 0,\n\n        // Step 4\n        suspectedCause: '',\n        action: '',\n        probSuccess: 0,\n        estCost: 0\n    });\n\n\n    const handleInputChange = (e) => {\n        const value = e.target.value;\n        const name = e.target.name;\n        setFormInfo(formInfo => ({...formInfo, [name]: value}))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        newIFR(formInfo)\n            .then(() => {\n                console.log(formInfo);\n            });\n    }\n\n    useEffect(() => {\n        getOneSensorData(sensorDataInfo.incidentNum)\n            .then(data => {\n                var date = new Date(data.coordinates[0].time);\n                setDate(date.toString());\n                setSensorDataInfo(data);\n                setFormInfo(formInfo => ({...formInfo, incidentNum: data.incidentNum}))\n            })\n            .catch(error => {\n                setError({error: 1, code: error.message});\n            })\n    }, []);\n\n    if(error){\n        return(\n            <div className=\"container-fluid IFR-form-body-error\">\n                <img className=\"ErrorImage\" src={errorImg} />\n                <h2>Oops! There is an error with the server.</h2> <br />\n                <h5>Error Code {error.code} </h5>\n            </div>\n        )\n    }\n    else{\n        return (\n            <div className=\"container-fluid IFR-form-body\">\n                <div className = \"formHeader\">\n                    <h2>Edit IFR form</h2>\n                    <h5>Incident Numer {props.match.params.incidentNum}</h5>\n                </div>\n\n                {/* Step 1: General Information */}\n                <div className=\"IFRFormBlock\">\n                    <h5 className=\"formBlockTitle\">Step 1: General Information</h5>\n                    <br className=\"formBlockBorder\"/>\n                    <div className=\"row\">\n                        <div className=\"col-md-6 formBlockCol\">\n                            <p>Incident Number</p>\n                            <Select className=\"formSubmissionSelect\" \n                            options={[{value: sensorDataInfo.incidentNum, label: sensorDataInfo.incidentNum}]}/>\n                            <p>Date & Time</p>\n                            <Select className=\"formSubmissionSelect\"\n                            options= {[{value: sensorDataInfo.coordinates[0].time, label: date}]}/>\n                            <p>Elevation (m)</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} type=\"number\" min=\"0\" name=\"elevation\"></input>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <p>Reported By</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} name=\"reportedBy\"></input>\n                            <p>Longitude</p>\n                            <Select className=\"formSubmissionSelect\"\n                            options={ [{value: sensorDataInfo.coordinates[0].longitude, label: sensorDataInfo.coordinates[0].longitude}] }/>\n                            <p>Latitude</p>\n                            <Select className=\"formSubmissionSelect\"\n                            options={ [{value: sensorDataInfo.coordinates[0].latitude, label: sensorDataInfo.coordinates[0].latitude}] }/>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Step 2: Fire Information */}\n                <div className=\"IFRFormBlock\">\n                    <h5 className=\"formBlockTitle\">Step 2: Fire Information</h5>\n                    <br className=\"formBlockBorder\"/>\n                    <div className=\"row\">\n                        <div className=\"col-md-6 formBlockCol\">\n                            <p>Alpha Size</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} type=\"number\" min=\"0\" name=\"alpha\"></input>\n                            <p>Fuels</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} type=\"number\" min=\"0\" name=\"fuels\"></input>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <p>Fire Rank</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} type=\"number\" min=\"0\" name=\"fireRank\"></input>\n                            <p>Radius (m)</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} type=\"number\" min=\"0\" name=\"radius\"></input>\n                        </div>\n                    </div>\n                </div>\n\n                {/* Step 3: Environmental Factors */}\n                <div className=\"IFRFormBlock\">\n                    <h5 className=\"formBlockTitle\">Step 3: Environment Factors</h5>\n                    <br className=\"formBlockBorder\"/>\n                    <div className=\"row\">\n                        <div className=\"col-md-6 formBlockCol\">\n                            <p>Values at Risk</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} name=\"valAtRisk\"></input>\n                            <p>Adjacent Fuels</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} name=\"adjFuels\"></input>\n                            <p>Aspect</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} name=\"aspect\"></input>\n                            <p>Access</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} name=\"access\"></input>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <p>Wind</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} type=\"number\" min=\"0\" name=\"wind\"></input>\n                            <p>Slope</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} type=\"number\" min=\"0\" name=\"slope\"></input>\n                            <p>Slope Position</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} name=\"slopePos\"></input>\n                            <p>Available Water</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} type=\"number\" min=\"0\" name=\"availWater\"></input>\n                        </div>\n                    </div>\n                </div>\n\n\n                {/* Step 4: Cause and Action */}\n                <div className=\"IFRFormBlock\">\n                    <h5 className=\"formBlockTitle\">Step 4: Cause and Action</h5>\n                    <br className=\"formBlockBorder\"/>\n                    <div className=\"row\">\n                        <div className=\"col-md-6 formBlockCol\">\n                            <p>Probability of Success (%)</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} type=\"number\" min=\"0\" name=\"probSuccess\"></input>\n                            <p>Action Recommended</p>\n                            <textarea className=\"IFRInput\" onChange={handleInputChange} name=\"action\"></textarea>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <p>Estimated Cost of Control</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} type=\"number\" min=\"0\" name=\"estCost\"></input>\n                            <p>Suspected Cause</p>\n                            <input className=\"IFRInput\" onChange={handleInputChange} name=\"suspectedCause\"></input>\n                        </div>\n                    </div>\n                </div>\n\n                <button className=\"btn IFRFormBtn\" onClick={handleSubmit}>Submit</button>\n            </div>\n\n        );\n    }\n}\n\nexport default IFRForm;","/Users/victor/Desktop/fire-drone/src/pages/AlertHistory.js",["111","112","113","114"],"import React, { Component } from \"react\";\nimport '../css/AlertHistory.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Grid from \"react-fast-grid\";\n\nclass AlertHistory extends Component {\n  constructor(props){\n    super(props);\n    this.state = {data: [{incidentNum: \"loading...\", coordinates: \"loading...\", IFRStatus: \"loading...\", alertStatus: \"loading...\", radius: \"loading...\", fireRank: \"loading...\", fuels: \"loading...\", valAtRisk: \"loading...\", access: \"loading...\"}]};\n    this.eventSource = new EventSource('http://localhost:5000/SSE');\n    this.eventSource.onopen = (e) => {\n        console.log(\"Connected to SSE...\");\n    };\n    this.eventSource.onerror = () => {\n      this.eventSource = new EventSource('http://localhost:5000/SSE');\n    }\n  }\n\n  componentDidMount() {\n      this.eventSource.addEventListener('alertUpdate', (e) => {\n        console.log(JSON.parse(e.data));\n        var data = JSON.parse(e.data);\n        this.setState({data: data});\n      })\n  }\n\n  componentWillUnmount() {\n      console.log(\"Disconnecting from SSE...\")\n      this.eventSource.close();\n  }\n\n  render() {\n \n    return (\n      <div className=\"page\">\n        <Grid container spacing={3} direction=\"row\" className=\"dashBoard-row\">\n\n        <Grid item  xs={12}>\n        {this.state.data.map(item => {\n\n          let ifrStat;\n          let alertStat;\n\n          if (item.IFRStatus==\"0\"){\n            /*un-edited*/\n            ifrStat = <div>Alert Status: Unfilled </div>;\n          }\n          if (item.IFRStatus==\"1\"){\n            /*edited*/\n            ifrStat = <div>Alert Status: Filled </div>;\n          }\n          if (item.alertStatus==\"0\"){\n            /*inactive*/\n            alertStat = <div style={{borderRadius: '2rem', backgroundColor:'#4A6572', color:'white', fontWeight: 'bold', textAlign:'center'}}> Not Active </div>;\n          }\n          if (item.alertStatus==\"1\"){\n            /*active*/\n            alertStat = <div style={{borderRadius: '2rem', backgroundColor:'#F9AA33', color:'white', fontWeight: 'bold', textAlign:'center'}}> Active </div>;\n          }\n\n            return(\n              <div className=\"recentAlerts\">\n              <Grid container spacing={3}>\n\n                <Grid item xs={8}>\n                  <div style={{fontWeight:'700', fontSize:'20px'}}>Coordinates: {item.coordinates[0].longitude}, {item.coordinates[0].latitude}</div>\n                </Grid>\n\n                <Grid item xs={7}>\n                  <div>Incident Number: {item.incidentNum}</div>\n                </Grid>\n\n                <Grid item xs={5}>\n                  {ifrStat}\n                </Grid>\n\n                <Grid item xs={5}>\n                  {alertStat}\n                </Grid>\n\n              </Grid>   \n            </div>\n            )\n          })}\n        </Grid>           \n\n        </Grid>\n\n        \n      </div>\n    );\n  }\n}\n \nexport default AlertHistory;","/Users/victor/Desktop/fire-drone/src/pages/Map.js",["115"],"import React, { Component,} from 'react';\nimport '../css/Map.css';\nimport GoogleMapReact from 'google-map-react'\nimport LocationMarker from './LocationMarker'\nimport LocationInfoBox from '../components/LocationInfoBox'\nimport \"../css/LocationMarker.css\"\nconst getSensorData = require(\"../API/sensorData\").getSensorData;\n\nclass Map extends Component {\n  static defaultProps = {\n    center: {\n      lat: 49.2827,\n      lng: -123.1207\n    },\n    zoom: 11\n  };\n\n\n  constructor(props){\n    super(props);\n    this.state = {data: [{incidentNum: 0, alertStatus: 0, coordinates: [{longitude: -123.1207,latitude: 49.2827}]}], status: {in: 0, time: 0, display: false}}\n    var alldata =[]\n    this.infoClick= this.infoClick.bind(this);\n    \n    \n    getSensorData().then(item => {\n      item.data.map(alert => {\n        alldata.push(alert)\n      })\n      \n      this.state.data=alldata\n      console.log(this.state)\n      this.forceUpdate();\n    })\n  }\n  \n\n  infoClick(status){\n    this.setState({\n      status: status\n    });\n  }\n\n\n  render() {\n    return (\n      <div className=\"mapContainer\">\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: 'AIzaSyAChc-w8pscsRgaW5t1S2jyHLNzRVpOO9c' }}\n          defaultCenter={{lat: this.state.data[0].coordinates[0].latitude, lng: this.state.data[0].coordinates[0].longitude} }\n          defaultZoom={this.props.zoom}\n        >                \n          {this.state.data.map(item =>{\n              return( \n                \n                <LocationMarker \n                lat={item.coordinates[0].latitude} \n                lng={item.coordinates[0].longitude} \n                onClick={() =>this.infoClick({in: item.incidentNum, coordinateInfo: item.coordinates[0], alertStatus: item.alertStatus, display: true})}\n                className = \"location-marker\"\n                />\n\n              )\n            })}\n        </GoogleMapReact>\n\n        {this.state.status.display && <LocationInfoBox info={this.state.status} />}  \n\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","/Users/victor/Desktop/fire-drone/src/pages/Dashboard.js",["116","117","118","119","120","121","122","123"],"/Users/victor/Desktop/fire-drone/src/components/Chart.js",["124"],"/Users/victor/Desktop/fire-drone/src/API/sensorData.js",[],"/Users/victor/Desktop/fire-drone/src/components/ErrorBoundary.js",["125"],"import React, { Component } from 'react';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error) {\n      // Update state so the next render will show the fallback UI.\n      return { hasError: true };\n    }\n  \n    // componentDidCatch(error, errorInfo) {\n    //   // You can also log the error to an error reporting service\n    //   getDerivedStateFromError(error);\n    // //   logErrorToMyService(error, errorInfo);\n    // }\n  \n    render() {\n        if (this.state.errorInfo) {\n          // Error path\n          return (\n            <div>\n              <h2>Something went wrong.</h2>\n              <details style={{ whiteSpace: 'pre-wrap' }}>\n                {this.state.error && this.state.error.toString()}\n                <br />\n                {this.state.errorInfo.componentStack}\n              </details>\n            </div>\n          );\n        }\n        // Normally, just render children\n        return this.props.children;\n      }  \n}\n\nexport default ErrorBoundary;",["126","127"],"/Users/victor/Desktop/fire-drone/src/pages/LocationMarker.js",[],"/Users/victor/Desktop/fire-drone/src/components/LocationMarker.js",[],["128","129"],"/Users/victor/Desktop/fire-drone/src/components/LocationInfoBox.js",[],"/Users/victor/Desktop/fire-drone/src/pages/Photos.js",["130","131","132","133","134"],"import React, { useState, useEffect } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../css/Photos.css\";\nconst getPhotoInfo = require(\"../API/photos\").getPhotoInfo;\n\nconst Photos = (props) => {\n    const [photoInfo, setPhotoInfo] = useState(0);\n    const [photoNum, setPhotoNum] = useState(0);\n    const [loaded, setLoaded] = useState (0);\n    const incidentNum= props.match.params.incidentNum;\n    var imgLoaded = 0;\n\n    useEffect(() => {\n        getPhotoInfo(incidentNum)\n            .then(data => {\n                setPhotoInfo(data);\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    }, []);\n\n    const onClickPhoto = (num) => {\n        setPhotoNum(num);\n        // Get the modal\n        var modal = document.getElementById(\"myModal\");\n\n        // Get the image and insert it inside the modal - use its \"alt\" text as a caption\n        modal.style.display = \"block\";\n\n        // Get the <span> element that closes the modal\n        var span = document.getElementsByClassName(\"close\")[0];\n\n        // When the user clicks on <span> (x), close the modal\n        span.onclick = () => {\n            modal.style.display = \"none\";\n        }\n\n        document.onkeydown = e => {\n            if(e.key === \"Escape\"){modal.style.display = \"none\";}\n        }\n    }\n\n    const imageLoaded = () => {\n        imgLoaded++;\n        if(imgLoaded == photoInfo && imgLoaded != 0){\n            setLoaded(1);\n        }\n    }\n\n    const photoGallery = () => {\n        let gallery = []\n        for(let i = 0; i < photoInfo; i++){\n            gallery.push(\n                <div className = \"col-lg-4\" key = {i}>\n                    <img \n                        className=\"photo_image\" \n                        onClick={() => onClickPhoto(i)} \n                        style={loaded ? {} : { display: 'none' }}\n                        onLoad={() => imageLoaded()}\n                        name={i} \n                        alt = \"Forest Fire Photo\"\n                        src={\"http://localhost:5000/photos/\" + incidentNum + '/' + i} />\n                </div>\n            )\n        }\n        return gallery\n    }\n    \n    return(\n        <div className=\"container-fluid photoContainer\">\n            <div className = \"row photoRow\">\n                {photoGallery()}\n                <div className = \"loader\" style={loaded ? {display: 'none'} : { }}></div>\n                <h4 className = \"loadText\" style={loaded ? {display: 'none'} : { }}>Loading...</h4>\n            </div>\n\n            <div id=\"myModal\" className=\"modal\">\n\n                <span className=\"close\">&times;</span>\n\n                <div id=\"caption\">\n                    <h4><b>Incident {incidentNum}</b></h4>\n                    <h5>Photo {photoNum}</h5>\n                </div>\n\n                <img className=\"photo_modal\" alt= \"Forest Fire Photo\" src={\"http://localhost:5000/photos/\" + incidentNum + '/' + photoNum} />\n\n\n            </div>\n        </div>\n    )\n    \n}\n\nexport default Photos;","/Users/victor/Desktop/fire-drone/src/API/photos.js",[],"/Users/victor/Desktop/fire-drone/src/API/IFR.js",[],"/Users/victor/Desktop/fire-drone/src/components/LightningMap.js",["135"],"import React, { Component,} from 'react';\nimport '../css/Dashboard.css';\nimport GoogleMapReact from 'google-map-react'\nimport LightningMarker from './LightningMarker'\nconst getSensorData = require(\"../API/sensorData\").getSensorData;\n\nclass LMap extends Component {\n  static defaultProps = {\n    center: {\n      lat: 49.2827,\n      lng: -123.1207\n    },\n    zoom: 11\n  };\n\n\n  constructor(props){\n    super(props);\n    this.state = {data: [{incidentNum: 0, alertStatus: 0, coordinates: [{longitude: -123.1207,latitude: 49.2827}]}], status: {in: 0, time: 0, display: false}}\n    var alldata =[]\n    this.infoClick= this.infoClick.bind(this);\n    \n    \n    getSensorData().then(item => {\n      item.data.map(alert => {\n        alldata.push(alert)\n      })\n      \n      this.state.data=alldata\n      console.log(this.state)\n      this.forceUpdate();\n    })\n  }\n  \n\n  infoClick(status){\n    this.setState({\n      status: status\n    });\n  }\n\n\n  render() {\n    return (\n      <div className=\"LmapContainer\">\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: 'AIzaSyAChc-w8pscsRgaW5t1S2jyHLNzRVpOO9c' }}\n          defaultCenter={{lat: this.state.data[0].coordinates[0].latitude, lng: this.state.data[0].coordinates[0].longitude} }\n          defaultZoom={this.props.zoom}\n        >                \n          {this.state.data.map(item =>{\n              return( \n                \n                <LightningMarker \n                lat={item.coordinates[0].latitude} \n                lng={item.coordinates[0].longitude} \n                onClick={() =>this.infoClick({in: item.incidentNum, coordinateInfo: item.coordinates[0], alertStatus: item.alertStatus, display: true})}\n                className = \"lightning-marker\"\n                />\n\n              )\n            })}\n        </GoogleMapReact>\n\n        {/*{this.state.status.display && <LocationInfoBox info={this.state.status} />}  */}\n\n      </div>\n    );\n  }\n}\n\nexport default LMap;","/Users/victor/Desktop/fire-drone/src/components/LightningMarker.js",["136"],"import { Icon, InlineIcon } from '@iconify/react';\nimport bxCloudLightning from '@iconify-icons/bx/bx-cloud-lightning';\n\nconst LightningMarker = ({ lat, lng, onClick }) => {\n    return (\n        <div className=\"lightning-marker\" onClick={onClick}>\n            <Icon icon={bxCloudLightning} className=\"lightning-icon\" />\n        </div>\n    )\n}\n\nexport default LightningMarker;",{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"137","replacedBy":"141"},{"ruleId":"139","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":11,"column":8,"nodeType":"145","messageId":"146","endLine":11,"endColumn":18},{"ruleId":"147","severity":1,"message":"148","line":23,"column":21,"nodeType":"149","endLine":23,"endColumn":70},{"ruleId":"147","severity":1,"message":"148","line":39,"column":81,"nodeType":"149","endLine":39,"endColumn":125},{"ruleId":"150","severity":1,"message":"151","line":76,"column":8,"nodeType":"152","endLine":76,"endColumn":10,"suggestions":"153"},{"ruleId":"147","severity":1,"message":"148","line":81,"column":17,"nodeType":"149","endLine":81,"endColumn":62},{"ruleId":"154","severity":1,"message":"155","line":44,"column":29,"nodeType":"156","messageId":"157","endLine":44,"endColumn":31},{"ruleId":"154","severity":1,"message":"155","line":48,"column":29,"nodeType":"156","messageId":"157","endLine":48,"endColumn":31},{"ruleId":"154","severity":1,"message":"155","line":52,"column":31,"nodeType":"156","messageId":"157","endLine":52,"endColumn":33},{"ruleId":"154","severity":1,"message":"155","line":56,"column":31,"nodeType":"156","messageId":"157","endLine":56,"endColumn":33},{"ruleId":"158","severity":1,"message":"159","line":27,"column":27,"nodeType":"160","messageId":"161","endLine":27,"endColumn":29},{"ruleId":"143","severity":1,"message":"162","line":5,"column":10,"nodeType":"145","messageId":"146","endLine":5,"endColumn":14},{"ruleId":"143","severity":1,"message":"163","line":6,"column":8,"nodeType":"145","messageId":"146","endLine":6,"endColumn":21},{"ruleId":"154","severity":1,"message":"155","line":66,"column":33,"nodeType":"156","messageId":"157","endLine":66,"endColumn":35},{"ruleId":"147","severity":1,"message":"148","line":68,"column":114,"nodeType":"149","endLine":68,"endColumn":159},{"ruleId":"154","severity":1,"message":"155","line":70,"column":33,"nodeType":"156","messageId":"157","endLine":70,"endColumn":35},{"ruleId":"154","severity":1,"message":"155","line":74,"column":35,"nodeType":"156","messageId":"157","endLine":74,"endColumn":37},{"ruleId":"154","severity":1,"message":"155","line":77,"column":35,"nodeType":"156","messageId":"157","endLine":77,"endColumn":37},{"ruleId":"147","severity":1,"message":"148","line":100,"column":110,"nodeType":"149","endLine":100,"endColumn":156},{"ruleId":"143","severity":1,"message":"164","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":15},{"ruleId":"143","severity":1,"message":"165","line":1,"column":17,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},{"ruleId":"137","replacedBy":"166"},{"ruleId":"139","replacedBy":"167"},{"ruleId":"137","replacedBy":"168"},{"ruleId":"139","replacedBy":"169"},{"ruleId":"150","severity":1,"message":"170","line":21,"column":8,"nodeType":"152","endLine":21,"endColumn":10,"suggestions":"171"},{"ruleId":"154","severity":1,"message":"155","line":46,"column":22,"nodeType":"156","messageId":"157","endLine":46,"endColumn":24},{"ruleId":"154","severity":1,"message":"172","line":46,"column":48,"nodeType":"156","messageId":"157","endLine":46,"endColumn":50},{"ruleId":"173","severity":1,"message":"174","line":56,"column":21,"nodeType":"149","endLine":63,"endColumn":89},{"ruleId":"173","severity":1,"message":"174","line":87,"column":17,"nodeType":"149","endLine":87,"endColumn":142},{"ruleId":"158","severity":1,"message":"159","line":25,"column":27,"nodeType":"160","messageId":"161","endLine":25,"endColumn":29},{"ruleId":"143","severity":1,"message":"175","line":1,"column":16,"nodeType":"145","messageId":"146","endLine":1,"endColumn":26},"no-native-reassign",["176"],"no-negated-in-lhs",["177"],["176"],["177"],"no-unused-vars","'galleryImg' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'sensorDataInfo.incidentNum'. Either include it or remove the dependency array.","ArrayExpression",["178"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Icon' is defined but never used.","'formatGallery' is defined but never used.","'Chart' is defined but never used.","'Component' is defined but never used.",["176"],["177"],["176"],["177"],"React Hook useEffect has a missing dependency: 'incidentNum'. Either include it or remove the dependency array.",["179"],"Expected '!==' and instead saw '!='.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'InlineIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [sensorDataInfo.incidentNum]",{"range":"184","text":"185"},"Update the dependencies array to be: [incidentNum]",{"range":"186","text":"187"},[2041,2043],"[sensorDataInfo.incidentNum]",[664,666],"[incidentNum]"]